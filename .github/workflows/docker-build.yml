name: Docker Build and Push

on:
  push:
    branches:
      - develop
  pull_request:

# Add permissions for packages
permissions:
  contents: read
  packages: write

env:
  SCRIPTS_DIR: .github/scripts/build

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - service: nginx
            dockerfile: nginx/Dockerfile.prod
            context: .
          - service: backend
            dockerfile: backend/Dockerfile.prod
            context: backend
          - service: ai
            dockerfile: ai/Dockerfile
            context: ai
    steps:
      - name: Login to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ secrets.ORGANIZATION }} # organization username
          password: ${{ secrets.GITHUB_TOKEN }} # classic token 필요

      - name: Checkout code
        uses: actions/checkout@v4 # 코드 체크아웃

      # Set up QEMU for multi-platform builds
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3 # QEMU 설정

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3 # Buildx 설정

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.dockerfile }}
          push: true
          tags: ghcr.io/kakaotech-25/moheng-${{ matrix.service }}:latest # 이미지 태그
          # push: ${{ github.event_name == 'push' && github.ref == 'refs/heads/develop' }}

  send-notification:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3 # 코드 체크아웃

      - name: Send Discord Notification via Shell Script
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }} # Discord 웹훅 URL
          GITHUB_WORKFLOW: ${{ github.workflow }} # 현재 워크플로우 이름
          GITHUB_ACTOR: ${{ github.actor }} # 실행 사용자
          GITHUB_REF_NAME: ${{ github.ref_name }} # 브랜치 이름
          GITHUB_SHA: ${{ github.sha }} # 커밋 SHA
          GITHUB_REPOSITORY: ${{ github.repository }} # 리포지토리 이름
          BUILD_STATUS: ${{ job.status }} # 빌드 상태
        if: always()
        run: |
          chmod +x ${{ env.SCRIPTS_DIR }}/send_discord_pipeline.sh && \
          ${{ env.SCRIPTS_DIR }}/send_discord_pipeline.sh \
          "${DISCORD_WEBHOOK}" \
          "${GITHUB_WORKFLOW}" \
          "${GITHUB_ACTOR}" \
          "${GITHUB_REF_NAME}" \
          "${GITHUB_SHA}" \
          "${GITHUB_REPOSITORY}" \
          "${BUILD_STATUS}"
