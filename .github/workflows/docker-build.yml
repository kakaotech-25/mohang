name: Docker Build and Push

on:
  push:
    branches:
      - develop
  pull_request:

env:
  IMAGE_STORAGE: "https://registry.hub.docker.com"
  IMAGE_NAME_PREFIX: "leovim5072/moheng-"
  DOCKERHUB_USERNAME: "leovim5072"
  SCRIPTS_DIR: .github/scripts/build

jobs:
  docker-login:
    runs-on: ubuntu-latest
    steps:
      - name: Docker Login Test
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

  build-and-push:
    needs: [docker-login]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service:
          - nginx
          - backend
          - ai
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Record start time
        id: start-time
        run: echo "::set-output name=start::$(date +%s)"

      - name: Build Image
        env:
          IMAGE_NAME: ${{ env.IMAGE_NAME_PREFIX }}${{ matrix.service }}:latest
        run: |
          echo "Starting ${{ matrix.service }} Build..."
          cd ${{ matrix.service }}

          if [ "${{ matrix.service }}" == "nginx" ]; then
            DOCKERFILE="Dockerfile.prod"
            CONTEXT="../"
          elif [ "${{ matrix.service }}" == "backend" ]; then
            DOCKERFILE="Dockerfile.prod"
            CONTEXT="."
          else
            DOCKERFILE="Dockerfile"
            CONTEXT="."
          fi

          docker build -t $IMAGE_NAME -f $DOCKERFILE $CONTEXT
          echo "Build Completed!"

      - name: Push Image
        if: github.event_name == 'push' && github.ref == 'refs/heads/develop'
        env:
          IMAGE_NAME: ${{ env.IMAGE_NAME_PREFIX }}${{ matrix.service }}:latest
        run: |
          echo "Pushing $IMAGE_NAME to Docker Registry..."
          docker push $IMAGE_NAME
          echo "Push Completed!"

  send-notification:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Send Discord Notification via Shell Script
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
          GITHUB_WORKFLOW: ${{ github.workflow }}
          GITHUB_ACTOR: ${{ github.actor }}
          GITHUB_REF_NAME: ${{ github.ref_name }}
          GITHUB_SHA: ${{ github.sha }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          BUILD_STATUS: ${{ job.status }}
        if: always()
        run: |
          chmod +x ${{ env.SCRIPTS_DIR }}/send_discord_pipeline.sh && \
          ${{ env.SCRIPTS_DIR }}/send_discord_pipeline.sh \
          "${DISCORD_WEBHOOK}" \
          "${GITHUB_WORKFLOW}" \
          "${GITHUB_ACTOR}" \
          "${GITHUB_REF_NAME}" \
          "${GITHUB_SHA}" \
          "${GITHUB_REPOSITORY}" \
          "${BUILD_STATUS}"
