name: Docker Build and Push

on:
  push:
    branches:
      - develop
  pull_request:
    # ÏõêÌïòÎäî Î∏åÎûúÏπòÎ•º ÏßÄÏ†ïÌï† Ïàò ÏûàÏäµÎãàÎã§.
    # branches:
    #   - develop
  # workflow_dispatch:

env:
  IMAGE_STORAGE: "docker.io"
  IMAGE_NAME_PREFIX: "leovim5072/moheng-"
  DOCKERHUB_USERNAME: "leovim5072"

jobs:
  docker-login:
    runs-on: ubuntu-latest
    steps:
      - name: Docker Login Test
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

  build-and-push:
    needs: [docker-login]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service:
          - nginx
          - backend
          - ai
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Image
        env:
          IMAGE_NAME: ${{ env.IMAGE_NAME_PREFIX }}${{ matrix.service }}:latest
        run: |
          echo "Starting ${{ matrix.service }} Build..."
          cd ${{ matrix.service }}

          if [ "${{ matrix.service }}" == "nginx" ]; then
            DOCKERFILE="Dockerfile.prod"
            CONTEXT="../"
          elif [ "${{ matrix.service }}" == "backend" ]; then
            DOCKERFILE="Dockerfile.prod"
            CONTEXT="."
          else
            DOCKERFILE="Dockerfile"
            CONTEXT="."
          fi

          docker build -t $IMAGE_NAME -f $DOCKERFILE $CONTEXT
          echo "Build Completed!"

      - name: Push Image
        if: github.event_name == 'push' && github.ref == 'refs/heads/develop'
        env:
          IMAGE_NAME: ${{ env.IMAGE_NAME_PREFIX }}${{ matrix.service }}:latest
        run: |
          echo "Pushing $IMAGE_NAME to Docker Registry..."
          docker push $IMAGE_NAME
          echo "Push Completed!"

  send-notification:
    needs: build-and-push
    runs-on: ubuntu-latest
    env:
      DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
    steps:
      - name: Send Discord Notification
        uses: Ilshidur/action-discord@0.3.2
        with:
          args: |
            {
              "content": "Build Pipeline Notification",
              "username": "Github CI/CD Bot",
              "embeds": [
                {
                  "title": "üöÄ Build Pipeline Status: {{ github.workflow }}",
                  "description": "Build triggered by **{{ github.actor }}** on branch **{{ github.ref_name }}**.",
                  "color": 65280,  # ÏÑ±Í≥µ: ÎÖπÏÉâ
                  "fields": [
                    {
                      "name": "üîÑ Commit",
                      "value": "[{{ github.sha }}](https://github.com/{{ github.repository }}/commit/{{ github.sha }})",
                      "inline": true
                    },
                    {
                      "name": "üìÇ Repository",
                      "value": "{{ github.repository }}",
                      "inline": true
                    },
                    {
                      "name": "‚è∞ Build Time",
                      "value": "{{ steps.build-time.outputs.time }}",
                      "inline": true
                    }
                  ],
                  "footer": {
                    "text": "Build completed at {{ github.event.head_commit.timestamp }}"
                  }
                }
              ]
            }
